input {
    file {
        #        path => ["/home/server/server_jqp/launcher/logs/2019-06-25/*.log"]
        path => ["/usr/local/src/logstash-7.1.1/logs/launcher/2019-06-27/attarea_10002__debug.log"]
        start_position => "beginning"
        type => "launcher"
        codec => multiline {
                     pattern => "^\["
                     negate => true
                     what => "previous"
                 }
    }
}
#filter {
#    if [type] == "launcher" {
#        grok {
#            patterns_dir => ["/usr/local/src/logstash-7.1.1/config/patterns"]
#            break_on_match => false
#            match => {
#                "path" => ["%{DATE_CN:[@metadata][path_date]}",
#                        "(?>%{DATE_CN}/)(%{USERNAME:[@metadata][file_name]})(?=\.log)"]
#                "message" => [
#                        "\[%{LOG_ID:[@metadata][logid]}\]",
#                        "%{DATESTAMP:[@metadata][timestamp]}",
#                        "%{LOGLEVEL:[@metadata][level]}",
#                        "(?>%{LOGLEVEL}\:\s+)(%{GREEDYDATA:[@metadata][message]})(?=\.)"
#                ]
#            }
#            #overwrite => [ "message" ]
#            #remove_field => ["message"]
#        }
#        if [@metadata][message] {
#            mutate {
#                replace => { "message" => "%{[@metadata][message]}" }
#            }
#        }
#        date {
#            match => [ "[@metadata][timestamp]", "yyyy-MM-dd HH:mm:ss" ]
#        }
#    }
#}
output {
    stdout {
        codec => rubydebug {  metadata => true }
    }
    elasticsearch {
        hosts => ["http://localhost:9200"]
        index => "aaaa"

        doc_as_upsert => true
    }
#    if [type] == "launcher" and [@metadata][logid] {
#        stdout {
#            codec => rubydebug {  metadata => true }
#        }
#        if [path] =~ 'attarea' {
#            elasticsearch {
#                hosts => ["http://localhost:9200"]
#                index => "%{[type]}-attarea-%{[@metadata][path_date]}"
#
#                doc_as_upsert => true
#            }
#        }
#    }
}